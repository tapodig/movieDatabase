//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 2023. 04. 26. 2:07:46
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Internal;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.Extensions.Configuration;
using Filmadatbazis;

namespace cnFilmadatbazis
{

    public partial class Filmadatbazis : DbContext
    {

        public Filmadatbazis() :
            base()
        {
            OnCreated();
        }

        public Filmadatbazis(DbContextOptions<Filmadatbazis> options) :
            base(options)
        {
            OnCreated();
        }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured ||
                (!optionsBuilder.Options.Extensions.OfType<RelationalOptionsExtension>().Any(ext => !string.IsNullOrEmpty(ext.ConnectionString) || ext.Connection != null) &&
                 !optionsBuilder.Options.Extensions.Any(ext => !(ext is RelationalOptionsExtension) && !(ext is CoreOptionsExtension))))
            {
                optionsBuilder.UseSqlServer(GetConnectionString());
            }
            CustomizeConfiguration(ref optionsBuilder);
            base.OnConfiguring(optionsBuilder);
        }

        private static string GetConnectionString()
        {
            
            return "Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=movieDatabase;Integrated Security=True;Connect Timeout=30;Encrypt=False;Trust Server Certificate=True;Application Intent=ReadWrite;Multi Subnet Failover=False";
        }

        partial void CustomizeConfiguration(ref DbContextOptionsBuilder optionsBuilder);

        public virtual DbSet<enActor> enActors
        {
            get;
            set;
        }

        public virtual DbSet<enMovie_Cast> enMovie_Casts
        {
            get;
            set;
        }

        public virtual DbSet<enMovie> enMovies
        {
            get;
            set;
        }

        public virtual DbSet<enDirector> enDirectors
        {
            get;
            set;
        }

        public virtual DbSet<enMovie_Direction> enMovie_Directions
        {
            get;
            set;
        }

        public virtual DbSet<enMovie_Genres> enMovie_Genres
        {
            get;
            set;
        }

        public virtual DbSet<enGenres> enGenres
        {
            get;
            set;
        }

        public virtual DbSet<enRating> enRatings
        {
            get;
            set;
        }

        public virtual DbSet<enReviewer> enReviewers
        {
            get;
            set;
        }

        public virtual DbSet<enStreaming> enStreamings
        {
            get;
            set;
        }

        public virtual DbSet<enMovie_Streaming> enMovie_Streamings
        {
            get;
            set;
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            this.enActorMapping(modelBuilder);
            this.CustomizeenActorMapping(modelBuilder);

            this.enMovie_CastMapping(modelBuilder);
            this.CustomizeenMovie_CastMapping(modelBuilder);

            this.enMovieMapping(modelBuilder);
            this.CustomizeenMovieMapping(modelBuilder);

            this.enDirectorMapping(modelBuilder);
            this.CustomizeenDirectorMapping(modelBuilder);

            this.enMovie_DirectionMapping(modelBuilder);
            this.CustomizeenMovie_DirectionMapping(modelBuilder);

            this.enMovie_GenresMapping(modelBuilder);
            this.CustomizeenMovie_GenresMapping(modelBuilder);

            this.enGenresMapping(modelBuilder);
            this.CustomizeenGenresMapping(modelBuilder);

            this.enRatingMapping(modelBuilder);
            this.CustomizeenRatingMapping(modelBuilder);

            this.enReviewerMapping(modelBuilder);
            this.CustomizeenReviewerMapping(modelBuilder);

            this.enStreamingMapping(modelBuilder);
            this.CustomizeenStreamingMapping(modelBuilder);

            this.enMovie_StreamingMapping(modelBuilder);
            this.CustomizeenMovie_StreamingMapping(modelBuilder);

            RelationshipsMapping(modelBuilder);
            CustomizeMapping(ref modelBuilder);
        }

        #region enActor Mapping

        private void enActorMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<enActor>().ToTable(@"Actor");
            modelBuilder.Entity<enActor>().Property(x => x.act_id).HasColumnName(@"act_id").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<enActor>().Property(x => x.act_fname).HasColumnName(@"act_fname").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<enActor>().Property(x => x.act_lname).HasColumnName(@"act_lname").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<enActor>().Property(x => x.act_gender).HasColumnName(@"act_gender").IsRequired().ValueGeneratedNever().HasMaxLength(1);
            modelBuilder.Entity<enActor>().HasKey(@"act_id");
        }

        partial void CustomizeenActorMapping(ModelBuilder modelBuilder);

        #endregion

        #region enMovie_Cast Mapping

        private void enMovie_CastMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<enMovie_Cast>().ToTable(@"Movie_Cast");
            modelBuilder.Entity<enMovie_Cast>().Property(x => x.id).HasColumnName(@"id").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<enMovie_Cast>().Property(x => x.act_id).HasColumnName(@"act_id").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<enMovie_Cast>().Property(x => x.mov_id).HasColumnName(@"mov_id").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<enMovie_Cast>().Property(x => x.role).HasColumnName(@"role").IsRequired().ValueGeneratedNever().HasMaxLength(30);
            modelBuilder.Entity<enMovie_Cast>().HasKey(@"id");
        }

        partial void CustomizeenMovie_CastMapping(ModelBuilder modelBuilder);

        #endregion

        #region enMovie Mapping

        private void enMovieMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<enMovie>().ToTable(@"Movie");
            modelBuilder.Entity<enMovie>().Property(x => x.mov_id).HasColumnName(@"mov_id").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<enMovie>().Property(x => x.mov_title).HasColumnName(@"mov_title").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<enMovie>().Property(x => x.mov_description).HasColumnName(@"mov_description").IsRequired().ValueGeneratedNever().HasMaxLength(255);
            modelBuilder.Entity<enMovie>().Property(x => x.move_year).HasColumnName(@"move_year").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<enMovie>().Property(x => x.mov_time).HasColumnName(@"mov_time").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<enMovie>().Property(x => x.mov_lang).HasColumnName(@"mov_lang").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<enMovie>().Property(x => x.mov_dt_rel).HasColumnName(@"mov_dt_rel").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<enMovie>().Property(x => x.mov_rel_country).HasColumnName(@"mov_rel_country").IsRequired().ValueGeneratedNever().HasMaxLength(5);
            modelBuilder.Entity<enMovie>().Property(x => x.mov_trailer).HasColumnName(@"mov_trailer").IsRequired().ValueGeneratedNever().HasDefaultValueSql(@"255");
            modelBuilder.Entity<enMovie>().Property(x => x.mov_pic).HasColumnName(@"mov_pic").IsRequired().ValueGeneratedNever().HasMaxLength(255);
            modelBuilder.Entity<enMovie>().HasKey(@"mov_id");
        }

        partial void CustomizeenMovieMapping(ModelBuilder modelBuilder);

        #endregion

        #region enDirector Mapping

        private void enDirectorMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<enDirector>().ToTable(@"Director");
            modelBuilder.Entity<enDirector>().Property(x => x.dir_id).HasColumnName(@"dir_id").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<enDirector>().Property(x => x.dir_fname).HasColumnName(@"dir_fname").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<enDirector>().Property(x => x.dir_lname).HasColumnName(@"dir_lname").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<enDirector>().HasKey(@"dir_id");
        }

        partial void CustomizeenDirectorMapping(ModelBuilder modelBuilder);

        #endregion

        #region enMovie_Direction Mapping

        private void enMovie_DirectionMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<enMovie_Direction>().ToTable(@"Movie_Direction");
            modelBuilder.Entity<enMovie_Direction>().Property(x => x.id).HasColumnName(@"id").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<enMovie_Direction>().Property(x => x.dir_id).HasColumnName(@"dir_id").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<enMovie_Direction>().Property(x => x.mov_id).HasColumnName(@"mov_id").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<enMovie_Direction>().HasKey(@"id");
        }

        partial void CustomizeenMovie_DirectionMapping(ModelBuilder modelBuilder);

        #endregion

        #region enMovie_Genres Mapping

        private void enMovie_GenresMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<enMovie_Genres>().ToTable(@"Movie_Genres");
            modelBuilder.Entity<enMovie_Genres>().Property(x => x.id).HasColumnName(@"id").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<enMovie_Genres>().Property(x => x.mov_id).HasColumnName(@"mov_id").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<enMovie_Genres>().Property(x => x.gen_id).HasColumnName(@"gen_id").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<enMovie_Genres>().HasKey(@"id");
        }

        partial void CustomizeenMovie_GenresMapping(ModelBuilder modelBuilder);

        #endregion

        #region enGenres Mapping

        private void enGenresMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<enGenres>().ToTable(@"Genres");
            modelBuilder.Entity<enGenres>().Property(x => x.gen_id).HasColumnName(@"gen_id").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<enGenres>().Property(x => x.gen_title).HasColumnName(@"gen_title").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<enGenres>().HasKey(@"gen_id");
        }

        partial void CustomizeenGenresMapping(ModelBuilder modelBuilder);

        #endregion

        #region enRating Mapping

        private void enRatingMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<enRating>().ToTable(@"Rating");
            modelBuilder.Entity<enRating>().Property(x => x.id).HasColumnName(@"id").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<enRating>().Property(x => x.mov_id).HasColumnName(@"mov_id").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<enRating>().Property(x => x.rev_id).HasColumnName(@"rev_id").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<enRating>().Property(x => x.rev_stars).HasColumnName(@"rev_stars").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<enRating>().Property(x => x.num_o_ratings).HasColumnName(@"num_o_ratings").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<enRating>().HasKey(@"id");
        }

        partial void CustomizeenRatingMapping(ModelBuilder modelBuilder);

        #endregion

        #region enReviewer Mapping

        private void enReviewerMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<enReviewer>().ToTable(@"Reviewer");
            modelBuilder.Entity<enReviewer>().Property(x => x.rev_id).HasColumnName(@"rev_id").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<enReviewer>().Property(x => x.rev_name).HasColumnName(@"rev_name").IsRequired().ValueGeneratedNever().HasMaxLength(30);
            modelBuilder.Entity<enReviewer>().HasKey(@"rev_id");
        }

        partial void CustomizeenReviewerMapping(ModelBuilder modelBuilder);

        #endregion

        #region enStreaming Mapping

        private void enStreamingMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<enStreaming>().ToTable(@"Streaming");
            modelBuilder.Entity<enStreaming>().Property(x => x.streaming_id).HasColumnName(@"streaming_id").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<enStreaming>().Property(x => x.streaming_name).HasColumnName(@"streaming_name").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<enStreaming>().HasKey(@"streaming_id");
        }

        partial void CustomizeenStreamingMapping(ModelBuilder modelBuilder);

        #endregion

        #region enMovie_Streaming Mapping

        private void enMovie_StreamingMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<enMovie_Streaming>().ToTable(@"Movie_Streaming");
            modelBuilder.Entity<enMovie_Streaming>().Property(x => x.id).HasColumnName(@"id").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<enMovie_Streaming>().Property(x => x.mov_id).HasColumnName(@"mov_id").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<enMovie_Streaming>().Property(x => x.streaming_id).HasColumnName(@"streaming_id").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<enMovie_Streaming>().HasKey(@"id");
        }

        partial void CustomizeenMovie_StreamingMapping(ModelBuilder modelBuilder);

        #endregion

        private void RelationshipsMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<enActor>().HasMany(x => x.enMovie_Casts).WithOne(op => op.enActor).HasForeignKey(@"act_id").IsRequired(true);

            modelBuilder.Entity<enMovie_Cast>().HasOne(x => x.enActor).WithMany(op => op.enMovie_Casts).HasForeignKey(@"act_id").IsRequired(true);
            modelBuilder.Entity<enMovie_Cast>().HasOne(x => x.enMovie).WithMany(op => op.enMovie_Casts).HasForeignKey(@"mov_id").IsRequired(true);

            modelBuilder.Entity<enMovie>().HasMany(x => x.enMovie_Casts).WithOne(op => op.enMovie).HasForeignKey(@"mov_id").IsRequired(true);
            modelBuilder.Entity<enMovie>().HasMany(x => x.enMovie_Directions).WithOne(op => op.enMovie).HasForeignKey(@"mov_id").IsRequired(true);
            modelBuilder.Entity<enMovie>().HasMany(x => x.enMovie_Genres).WithOne(op => op.enMovie).HasForeignKey(@"mov_id").IsRequired(true);
            modelBuilder.Entity<enMovie>().HasMany(x => x.enRatings).WithOne(op => op.enMovie).HasForeignKey(@"mov_id").IsRequired(true);
            modelBuilder.Entity<enMovie>().HasMany(x => x.enMovie_Streamings).WithOne(op => op.enMovie).HasForeignKey(@"mov_id").IsRequired(true);

            modelBuilder.Entity<enDirector>().HasMany(x => x.enMovie_Directions).WithOne(op => op.enDirector).HasForeignKey(@"dir_id").IsRequired(true);

            modelBuilder.Entity<enMovie_Direction>().HasOne(x => x.enDirector).WithMany(op => op.enMovie_Directions).HasForeignKey(@"dir_id").IsRequired(true);
            modelBuilder.Entity<enMovie_Direction>().HasOne(x => x.enMovie).WithMany(op => op.enMovie_Directions).HasForeignKey(@"mov_id").IsRequired(true);

            modelBuilder.Entity<enMovie_Genres>().HasOne(x => x.enGenres).WithMany(op => op.enMovie_Genres).HasForeignKey(@"gen_id").IsRequired(true);
            modelBuilder.Entity<enMovie_Genres>().HasOne(x => x.enMovie).WithMany(op => op.enMovie_Genres).HasForeignKey(@"mov_id").IsRequired(true);

            modelBuilder.Entity<enGenres>().HasMany(x => x.enMovie_Genres).WithOne(op => op.enGenres).HasForeignKey(@"gen_id").IsRequired(true);

            modelBuilder.Entity<enRating>().HasOne(x => x.enReviewer).WithMany(op => op.enRatings).HasForeignKey(@"rev_id").IsRequired(true);
            modelBuilder.Entity<enRating>().HasOne(x => x.enMovie).WithMany(op => op.enRatings).HasForeignKey(@"mov_id").IsRequired(true);

            modelBuilder.Entity<enReviewer>().HasMany(x => x.enRatings).WithOne(op => op.enReviewer).HasForeignKey(@"rev_id").IsRequired(true);

            modelBuilder.Entity<enStreaming>().HasMany(x => x.enMovie_Streamings).WithOne(op => op.enStreaming).HasForeignKey(@"streaming_id").IsRequired(true);

            modelBuilder.Entity<enMovie_Streaming>().HasOne(x => x.enStreaming).WithMany(op => op.enMovie_Streamings).HasForeignKey(@"streaming_id").IsRequired(true);
            modelBuilder.Entity<enMovie_Streaming>().HasOne(x => x.enMovie).WithMany(op => op.enMovie_Streamings).HasForeignKey(@"mov_id").IsRequired(true);
        }

        partial void CustomizeMapping(ref ModelBuilder modelBuilder);

        public bool HasChanges()
        {
            return ChangeTracker.Entries().Any(e => e.State == Microsoft.EntityFrameworkCore.EntityState.Added || e.State == Microsoft.EntityFrameworkCore.EntityState.Modified || e.State == Microsoft.EntityFrameworkCore.EntityState.Deleted);
        }

        partial void OnCreated();
    }
}
